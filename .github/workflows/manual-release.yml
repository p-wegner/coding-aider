name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to release (e.g., 1.0.9). If not provided, will use the current version without -SNAPSHOT'
        required: false
      next_version:
        description: 'Next development version (e.g., 1.1.0). -SNAPSHOT will be appended automatically'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Determine release version
        run: |
          CURRENT_VERSION=$(cat version.txt | sed 's/-SNAPSHOT//')
          RELEASE_VERSION="${{ github.event.inputs.release_version }}"
          if [ -z "$RELEASE_VERSION" ]; then
            RELEASE_VERSION="$CURRENT_VERSION"
          fi
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Update version for release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${{ env.RELEASE_VERSION }}" > version.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add version.txt
          git commit -m "Bump version to ${{ env.RELEASE_VERSION }}"
          git push

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag v${{ env.RELEASE_VERSION }}
          git push origin v${{ env.RELEASE_VERSION }}

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/coding-aider-${{ env.RELEASE_VERSION }}.jar
          asset_name: coding-aider-${{ env.RELEASE_VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Update version for next development cycle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEXT_VERSION="${{ github.event.inputs.next_version }}"
          if [[ ! $NEXT_VERSION =~ -SNAPSHOT$ ]]; then
            NEXT_VERSION="${NEXT_VERSION}-SNAPSHOT"
          fi
          echo "$NEXT_VERSION" > version.txt
          git add version.txt
          git commit -m "Bump version to $NEXT_VERSION"
          git push
