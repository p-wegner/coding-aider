@startuml

package "de.andrena.codingaider.utils" {
    class FileTraversal {
        +traverseFilesOrDirectories(files: Array<VirtualFile>, isReadOnly: Boolean): List<FileData>
    }

    class GitUtils {
        +getCurrentCommitHash(project: Project): String?
        +openGitComparisonTool(project: Project, commitHash: String, afterAction: () -> Unit)
    }

    interface ApiKeyChecker {
        +isApiKeyAvailableForLlm(llm: String): Boolean
        +getApiKeyForLlm(llm: String): String?
    }

    class DefaultApiKeyChecker {
        +isApiKeyAvailableForLlm(llm: String): Boolean
        +getApiKeyForLlm(llm: String): String?
    }

    class ApiKeyManager {
        +saveApiKey(keyName: String, apiKey: String)
        +getApiKey(keyName: String): String?
    }

    class FileRefresher {
        +refreshFiles(files: Array<VirtualFile>, markdownDialog: MarkdownDialog?)
    }

    class ReflectionUtils {
        +getNodesMapFromBuildView(view: BuildTreeConsoleView): Map<*, *>?
        +getTestsMapFromConsoleView(view: SMTRunnerConsoleView): Map<*, *>?
    }
}

FileTraversal --> FileData
GitUtils --> Project
ApiKeyChecker <|.. DefaultApiKeyChecker
ApiKeyManager --> CredentialAttributes
FileRefresher --> VirtualFile
ReflectionUtils --> BuildTreeConsoleView
ReflectionUtils --> SMTRunnerConsoleView

@enduml
